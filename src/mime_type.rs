#[derive(Debug)]
pub enum MimeType {
    Aac,
    Abw,
    Arc,
    Avif,
    Avi,
    Azw,
    Bin,
    Bmp,
    Bz,
    Bz2,
    Cda,
    Csh,
    Css,
    Csv,
    Doc,
    Docx,
    Eot,
    Epub,
    Gz,
    Gif,
    Htm,
    Html,
    Ico,
    Ics,
    Jar,
    Jpeg,
    Jpg,
    Js,
    Json,
    Jsonld,
    Mid,
    Midi,
    Mjs,
    Mp3,
    Mp4,
    Mpeg,
    Mpkg,
    Odp,
    Ods,
    Odt,
    Oga,
    Ogv,
    Ogx,
    Opus,
    Otf,
    Png,
    Pdf,
    Php,
    Ppt,
    Pptx,
    Rar,
    Rtf,
    Sh,
    Svg,
    Tar,
    Tif,
    Tiff,
    Ts,
    Ttf,
    Txt,
    Vsd,
    Wav,
    Weba,
    Webm,
    Webp,
    Woff,
    Woff2,
    Xhtml,
    Xls,
    Xlsx,
    Xml,
    Xul,
    Zip,
    V3gp,
    V3g2,
    X7z,
}

impl MimeType {
    pub fn from(s: &str) -> Option<Self> {
        match s {
            "aac" => Some(MimeType::Aac),
            "abw" => Some(MimeType::Abw),
            "arc" => Some(MimeType::Arc),
            "avif" => Some(MimeType::Avif),
            "avi" => Some(MimeType::Avi),
            "azw" => Some(MimeType::Azw),
            "bin" => Some(MimeType::Bin),
            "bmp" => Some(MimeType::Bmp),
            "bz" => Some(MimeType::Bz),
            "bz2" => Some(MimeType::Bz2),
            "cda" => Some(MimeType::Cda),
            "csh" => Some(MimeType::Csh),
            "css" => Some(MimeType::Css),
            "csv" => Some(MimeType::Csv),
            "doc" => Some(MimeType::Doc),
            "docx" => Some(MimeType::Docx),
            "eot" => Some(MimeType::Eot),
            "epub" => Some(MimeType::Epub),
            "gz" => Some(MimeType::Gz),
            "gif" => Some(MimeType::Gif),
            "htm" => Some(MimeType::Htm),
            "html" => Some(MimeType::Html),
            "ico" => Some(MimeType::Ico),
            "ics" => Some(MimeType::Ics),
            "jar" => Some(MimeType::Jar),
            "jpeg" => Some(MimeType::Jpeg),
            "jpg" => Some(MimeType::Jpg),
            "js" => Some(MimeType::Js),
            "json" => Some(MimeType::Json),
            "jsonld" => Some(MimeType::Jsonld),
            "mid" => Some(MimeType::Mid),
            "midi" => Some(MimeType::Midi),
            "mjs" => Some(MimeType::Mjs),
            "mp3" => Some(MimeType::Mp3),
            "mp4" => Some(MimeType::Mp4),
            "mpeg" => Some(MimeType::Mpeg),
            "mpkg" => Some(MimeType::Mpkg),
            "odp" => Some(MimeType::Odp),
            "ods" => Some(MimeType::Ods),
            "odt" => Some(MimeType::Odt),
            "oga" => Some(MimeType::Oga),
            "ogv" => Some(MimeType::Ogv),
            "ogx" => Some(MimeType::Ogx),
            "opus" => Some(MimeType::Opus),
            "otf" => Some(MimeType::Otf),
            "png" => Some(MimeType::Png),
            "pdf" => Some(MimeType::Pdf),
            "php" => Some(MimeType::Php),
            "ppt" => Some(MimeType::Ppt),
            "pptx" => Some(MimeType::Pptx),
            "rar" => Some(MimeType::Rar),
            "rtf" => Some(MimeType::Rtf),
            "sh" => Some(MimeType::Sh),
            "svg" => Some(MimeType::Svg),
            "tar" => Some(MimeType::Tar),
            "tif" => Some(MimeType::Tif),
            "tiff" => Some(MimeType::Tiff),
            "ts" => Some(MimeType::Ts),
            "ttf" => Some(MimeType::Ttf),
            "txt" => Some(MimeType::Txt),
            "vsd" => Some(MimeType::Vsd),
            "wav" => Some(MimeType::Wav),
            "weba" => Some(MimeType::Weba),
            "webm" => Some(MimeType::Webm),
            "webp" => Some(MimeType::Webp),
            "woff" => Some(MimeType::Woff),
            "woff2" => Some(MimeType::Woff2),
            "xhtml" => Some(MimeType::Xhtml),
            "xls" => Some(MimeType::Xls),
            "xlsx" => Some(MimeType::Xlsx),
            "xml" => Some(MimeType::Xml),
            "xul" => Some(MimeType::Xul),
            "zip" => Some(MimeType::Zip),
            "3gp" => Some(MimeType::V3gp),
            "3g2" => Some(MimeType::V3g2),
            "7z" => Some(MimeType::X7z),
            _ => None,
        }
    }

    pub fn get(&self) -> &str {
        match self {
            MimeType::Aac => "audio/aac",
            MimeType::Abw => "application/x-abiword",
            MimeType::Arc => "application/x-freearc",
            MimeType::Avif => "image/avif",
            MimeType::Avi => "video/x-msvideo",
            MimeType::Azw => "application/vnd.amazon.ebook",
            MimeType::Bin => "application/octet-stream",
            MimeType::Bmp => "image/bmp",
            MimeType::Bz => "application/x-bzip",
            MimeType::Bz2 => "application/x-bzip2",
            MimeType::Cda => "application/x-cdf",
            MimeType::Csh => "application/x-csh",
            MimeType::Css => "text/css",
            MimeType::Csv => "text/csv",
            MimeType::Doc => "application/msword",
            MimeType::Docx => {
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
            }
            MimeType::Eot => "application/vnd.ms-fontobject",
            MimeType::Epub => "application/epub+zip",
            MimeType::Gz => "application/gzip",
            MimeType::Gif => "image/gif",
            MimeType::Htm => "text/html",
            MimeType::Html => "text/html",
            MimeType::Ico => "image/vnd.microsoft.icon",
            MimeType::Ics => "text/calendar",
            MimeType::Jar => "application/java-archive",
            MimeType::Jpeg => "image/jpeg",
            MimeType::Jpg => "image/jpeg",
            MimeType::Js => "text/javascript",
            MimeType::Json => "application/json",
            MimeType::Jsonld => "application/ld+json",
            MimeType::Mid => "audio/midi",
            MimeType::Midi => "audio/midi",
            MimeType::Mjs => "text/javascript",
            MimeType::Mp3 => "audio/mpeg",
            MimeType::Mp4 => "video/mp4",
            MimeType::Mpeg => "video/mpeg",
            MimeType::Mpkg => "application/vnd.apple.installer+xml",
            MimeType::Odp => "application/vnd.oasis.opendocument.presentation",
            MimeType::Ods => "application/vnd.oasis.opendocument.spreadsheet",
            MimeType::Odt => "application/vnd.oasis.opendocument.text",
            MimeType::Oga => "audio/ogg",
            MimeType::Ogv => "video/ogg",
            MimeType::Ogx => "application/ogg",
            MimeType::Opus => "audio/opus",
            MimeType::Otf => "font/otf",
            MimeType::Png => "image/png",
            MimeType::Pdf => "application/pdf",
            MimeType::Php => "application/x-httpd-php",
            MimeType::Ppt => "application/vnd.ms-powerpoint",
            MimeType::Pptx => {
                "application/vnd.openxmlformats-officedocument.presentationml.presentation"
            }
            MimeType::Rar => "application/vnd.rar",
            MimeType::Rtf => "application/rtf",
            MimeType::Sh => "application/x-sh",
            MimeType::Svg => "image/svg+xml",
            MimeType::Tar => "application/x-tar",
            MimeType::Tif => "image/tiff ",
            MimeType::Tiff => "image/tiff",
            MimeType::Ts => "video/mp2t",
            MimeType::Ttf => "font/ttf",
            MimeType::Txt => "text/plain",
            MimeType::Vsd => "application/vnd.visio",
            MimeType::Wav => "audio/wav",
            MimeType::Weba => "audio/webm",
            MimeType::Webm => "video/webm",
            MimeType::Webp => "image/webp",
            MimeType::Woff => "font/woff",
            MimeType::Woff2 => "font/woff2",
            MimeType::Xhtml => "application/xhtml+xml",
            MimeType::Xls => "application/vnd.ms-excel",
            MimeType::Xlsx => "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            MimeType::Xml => "application/xml",
            MimeType::Xul => "application/vnd.mozilla.xul+xml",
            MimeType::Zip => "application/zip",
            MimeType::V3gp => "video/3gpp",
            MimeType::V3g2 => "video/3gpp2",
            MimeType::X7z => "application/x-7z-compressed",
        }
    }
}
